esphome:
  name: atlas-hydro-monitor
  friendly_name: Atlas Hydro Monitor

esp32:
  board: featheresp32
  framework:
    type: arduino

ota:
  - platform: esphome
    password: !secret hydro_monitor_ota_key

external_components:
  - source:
      type: local
      path: ../my_components
    components: ["ezo_types"]

logger:
  level: DEBUG

captive_portal:
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  passive_scan: false
  power_save_mode: none
  ap:
    ssid: "atlas-${device_mac}"
    password: !secret fallback_hotspot_key

web_server:
  version: 3
  port: 80

  sorting_groups:
    - id: ph_circuit
      name: "pH Circuit"
      sorting_weight: 10
    - id: ec_circuit
      name: "EC Circuit"
      sorting_weight: 20
    - id: rtd_circuit
      name: "RTD Circuit"
      sorting_weight: 30
    - id: orp_circuit
      name: "ORP Circuit"
      sorting_weight: 40

i2c:
  sda: 23
  scl: 22
  scan: true

text_sensor:
ezo:

sensor:
  - platform: ezo_types
    type: ph
    id: ph_sensor
    name: "pH"
    address: 99
    update_interval: 5s
    accuracy_decimals: 3
    web_server:
      sorting_group_id: ph_circuit
    voltage:
      name: "pH Voltage"
      web_server:
        sorting_group_id: ph_circuit
    reset_reason:
      name: "pH Reset Reason"
      web_server:
        sorting_group_id: ph_circuit
    firmware_version:
      name: "pH Firmware Version"
      web_server:
        sorting_group_id: ph_circuit
    temperature_compensation:
      name: "pH Temperature Compensation"
      web_server:
        sorting_group_id: ph_circuit

  - platform: ezo_types
    type: ec
    id: ec_sensor
    name: "EC"
    address: 100
    update_interval: 5s
    web_server:
      sorting_group_id: ec_circuit
    voltage:
      name: "EC Voltage"
      web_server:
        sorting_group_id: ec_circuit
    reset_reason:
      name: "EC Reset Reason"
      web_server:
        sorting_group_id: ec_circuit
    firmware_version:
      name: "EC Firmware Version"
      web_server:
        sorting_group_id: ec_circuit
    tds:
      name: "TDS"
      web_server:
        sorting_group_id: ec_circuit
    salinity:
      name: "Salinity"
      web_server:
        sorting_group_id: ec_circuit
    relative_density:
      name: "Relative Density"
      web_server:
        sorting_group_id: ec_circuit
    temperature_compensation:
      name: "EC Temperature Compensation"
      web_server:
        sorting_group_id: ec_circuit

  - platform: ezo_types
    type: rtd
    id: rtd_sensor
    name: "Temperature"
    address: 102
    update_interval: 5s
    web_server:
      sorting_group_id: rtd_circuit
    voltage:
      name: "RTD Voltage"
      web_server:
        sorting_group_id: rtd_circuit
    reset_reason:
      name: "RTD Reset Reason"
      web_server:
        sorting_group_id: rtd_circuit
    firmware_version:
      name: "RTD Firmware Version"
      web_server:
        sorting_group_id: rtd_circuit
    on_value:
      then:
        - lambda: |-
            // Only send temp compensation if enabled and not in calibration mode
            if (id(ph_temp_comp_switch).state && !id(ph_cal_mode_switch).state) {
              id(ph_sensor).set_t(x);
            }
            if (id(ec_temp_comp_switch).state && !id(ec_cal_mode_switch).state) {
              id(ec_sensor).set_t(x);
            }

  - platform: ezo_types
    type: orp
    id: orp_sensor
    name: "ORP"
    address: 98
    update_interval: 5s
    web_server:
      sorting_group_id: orp_circuit
    voltage:
      name: "ORP Voltage"
      web_server:
        sorting_group_id: orp_circuit
    reset_reason:
      name: "ORP Reset Reason"
      web_server:
        sorting_group_id: orp_circuit
    firmware_version:
      name: "ORP Firmware Version"
      web_server:
        sorting_group_id: orp_circuit

button:
  # === Factory Reset ===
  - platform: template
    name: "pH Factory Reset"
    web_server:
      sorting_group_id: ph_circuit
    on_press:
      - lambda: 'id(ph_sensor).factory_reset();'

  - platform: template
    name: "EC Factory Reset"
    web_server:
      sorting_group_id: ec_circuit
    on_press:
      - lambda: 'id(ec_sensor).factory_reset();'

  - platform: template
    name: "RTD Factory Reset"
    web_server:
      sorting_group_id: rtd_circuit
    on_press:
      - lambda: 'id(rtd_sensor).factory_reset();'

  - platform: template
    name: "ORP Factory Reset"
    web_server:
      sorting_group_id: orp_circuit
    on_press:
      - lambda: 'id(orp_sensor).factory_reset();'

  # === pH Calibration ===
  - platform: template
    name: "pH Cal Mid (7.00)"
    web_server:
      sorting_group_id: ph_circuit
    on_press:
      - lambda: 'id(ph_sensor).set_calibration_point_mid(7.00);'

  - platform: template
    name: "pH Cal Low (4.00)"
    web_server:
      sorting_group_id: ph_circuit
    on_press:
      - lambda: 'id(ph_sensor).set_calibration_point_low(4.00);'

  - platform: template
    name: "pH Cal High (10.00)"
    web_server:
      sorting_group_id: ph_circuit
    on_press:
      - lambda: 'id(ph_sensor).set_calibration_point_high(10.00);'

  # === EC Calibration ===
  - platform: template
    name: "EC Dry Calibration"
    web_server:
      sorting_group_id: ec_circuit
    on_press:
      - lambda: 'id(ec_sensor).set_calibration_point_dry();'

  - platform: template
    name: "EC Cal Low (1413 µS/cm)"
    web_server:
      sorting_group_id: ec_circuit
    on_press:
      - lambda: 'id(ec_sensor).set_calibration_point_low(1413.0);'

  - platform: template
    name: "EC Cal High (5000 µS/cm)"
    web_server:
      sorting_group_id: ec_circuit
    on_press:
      - lambda: 'id(ec_sensor).set_calibration_point_high(5000.0);'

  # === RTD Calibration ===
  - platform: template
    name: "RTD Calibration (25.0°C)"
    web_server:
      sorting_group_id: rtd_circuit
    on_press:
      - lambda: 'id(rtd_sensor).set_calibration_generic(25.0);'

  # === ORP Calibration ===
  - platform: template
    name: "ORP Calibration (400 mV)"
    web_server:
      sorting_group_id: orp_circuit
    on_press:
      - lambda: 'id(orp_sensor).set_calibration_generic(400.0);'

  # === Clear Calibration ===
  - platform: template
    name: "pH Clear Calibration"
    web_server:
      sorting_group_id: ph_circuit
    on_press:
      - lambda: 'id(ph_sensor).clear_calibration();'

  - platform: template
    name: "EC Clear Calibration"
    web_server:
      sorting_group_id: ec_circuit
    on_press:
      - lambda: 'id(ec_sensor).clear_calibration();'

  - platform: template
    name: "RTD Clear Calibration"
    web_server:
      sorting_group_id: rtd_circuit
    on_press:
      - lambda: 'id(rtd_sensor).clear_calibration();'

  - platform: template
    name: "ORP Clear Calibration"
    web_server:
      sorting_group_id: orp_circuit
    on_press:
      - lambda: 'id(orp_sensor).clear_calibration();'

  # === Temperature Compensation Reset ===
  - platform: template
    name: "pH Reset Temp Compensation"
    web_server:
      sorting_group_id: ph_circuit
    on_press:
      - lambda: 'id(ph_sensor).set_t(25.0);'

  - platform: template
    name: "EC Reset Temp Compensation"
    web_server:
      sorting_group_id: ec_circuit
    on_press:
      - lambda: 'id(ec_sensor).set_t(25.0);'

switch:
  # === Temperature Compensation Control ===
  - platform: template
    name: "pH Temp Compensation"
    id: ph_temp_comp_switch
    web_server:
      sorting_group_id: ph_circuit
    optimistic: true
    turn_on_action:
      - lambda: |-
          id(ph_sensor).set_temp_compensation_enabled(true);
          // Immediately apply current RTD temperature
          if (!std::isnan(id(rtd_sensor).state)) {
            id(ph_sensor).set_t(id(rtd_sensor).state);
          }
    turn_off_action:
      - lambda: 'id(ph_sensor).set_temp_compensation_enabled(false);'

  - platform: template
    name: "EC Temp Compensation"
    id: ec_temp_comp_switch
    web_server:
      sorting_group_id: ec_circuit
    optimistic: true
    turn_on_action:
      - lambda: |-
          id(ec_sensor).set_temp_compensation_enabled(true);
          // Immediately apply current RTD temperature
          if (!std::isnan(id(rtd_sensor).state)) {
            id(ec_sensor).set_t(id(rtd_sensor).state);
          }
    turn_off_action:
      - lambda: 'id(ec_sensor).set_temp_compensation_enabled(false);'

  # === Calibration Mode Control ===
  - platform: template
    name: "pH Calibration Mode"
    id: ph_cal_mode_switch
    web_server:
      sorting_group_id: ph_circuit
    optimistic: true
    turn_on_action:
      - lambda: |-
          id(ph_sensor).set_calibration_mode_enabled(true);
          // Set temperature to 25.0°C for calibration
          id(ph_sensor).set_t(25.0);
    turn_off_action:
      - lambda: 'id(ph_sensor).set_calibration_mode_enabled(false);'

  - platform: template
    name: "EC Calibration Mode"
    id: ec_cal_mode_switch
    web_server:
      sorting_group_id: ec_circuit
    optimistic: true
    turn_on_action:
      - lambda: |-
          id(ec_sensor).set_calibration_mode_enabled(true);
          // Set temperature to 25.0°C for calibration
          id(ec_sensor).set_t(25.0);
    turn_off_action:
      - lambda: 'id(ec_sensor).set_calibration_mode_enabled(false);'
